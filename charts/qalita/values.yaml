cluster:
  issuer: letsencrypt-prod
  domain: example.com
  name: local

dockerregistry:
  enabled: true
  dataSecret: |-
    {"auths":{"<registry-url>":{"password":"<password>","username":"<username>"}}}

frontend:

  telemetryDisabled: "1"
  webPackPolling: "false"
  mode: "production"

  image:
    repository: qalita.azurecr.io/qalita/frontend
    tag: "1.1.1"
    pullPolicy: IfNotPresent

  replicaCount: 1

  service:
    type: ClusterIP
    targetPort: "3000"
    protocol: TCP

  ingress:
    enabled: true
    tls:
      enabled: true

  deployment:
    resources:
      requests:
        memory: "256Mi"
        cpu: "500m"

    extraEnv:

doc:
  image:
    repository: qalita.azurecr.io/qalita/doc
    tag: "1.1.1"
    pullPolicy: IfNotPresent

  replicaCount: 1

  service:
    type: ClusterIP
    targetPort: "80"
    protocol: TCP

  ingress:
    enabled: true
    tls:
      enabled: true

  deployment:
    resources:
      requests:
        memory: "50Mi"
        cpu: "50m"

backend:

  organization:
    name: "local"

  tokenExpireMinutes: 240
  mode: "PROD"
  iniSleep: "3"

  adminUsername: "admin"
  adminPassword:
  secretKey:
  secretKeyAlgorithm: "HS256"

  api:
    port: "3080"
    host: "0.0.0.0"
    worker: 4

  image:
    repository: qalita.azurecr.io/qalita/backend
    tag: "1.1.1"
    pullPolicy: IfNotPresent

  replicaCount: 1

  service:
    type: ClusterIP
    targetPort: "3080"
    protocol: TCP

  ingress:
    enabled: true
    tls:
      enabled: true

  deployment:
    resources:
      requests:
        memory: "1024Mi"
        cpu: "500m"

    extraEnv:


postgresql:
  enabled: true
  image:
    tag: "15.3.0"

  global:
    postgresql:
      auth:
        database: qalitadb
        username: qalita
        password:

  primary:
    persistence:
      size: 8Gi

  backup:
    enabled: true
    cronjob:
      storage:
        resourcePolicy: "keep"

seaweedfs:
  enabled: true
  global:
    createClusterRole: true
    imageName: chrislusf/seaweedfs

  filer:
    resources: |
      requests:
        memory: "256Mi"
        cpu: "50m"

  volume:
    data:
      type: "persistentVolumeClaim"
      size: "21Gi"

    resources: |
      requests:
        memory: "100Mi"
        cpu: "50m"

  master:
    resources: |
      requests:
        memory: "64Mi"
        cpu: "50m"
