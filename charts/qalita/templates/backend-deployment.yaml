apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-backend"
  labels:
    app: "{{ .Release.Name }}-backend"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
{{ include "qalita.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      app: "{{ .Release.Name }}-backend"
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}-backend"
        release: {{ .Release.Name }}
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
    spec:
      containers:
      - name: "backend"
        image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
        imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
        startupProbe:
          exec:
            command:
            - /app/liveness_check.sh
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 10
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command:
            - /app/liveness_check.sh
          initialDelaySeconds: 10
          periodSeconds: 60
          failureThreshold: 3
          timeoutSeconds: 5
        env:
          - name: POSTGRESQL_SERVER
            value: "{{ .Release.Name }}-postgresql"
          - name: POSTGRESQL_PORT
            value: "{{ .Values.postgresql.primary.service.ports.postgresql }}"
          - name: POSTGRESQL_DATABASE
            value: "{{ .Values.postgresql.global.postgresql.auth.database }}"
          - name: POSTGRESQL_USERNAME
            value: "{{ .Values.postgresql.global.postgresql.auth.username }}"
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: "{{ .Release.Name }}-postgresql"
                optional: false
          - name: REDIS_SERVER
            value: "{{ .Release.Name }}-redis-master"
          - name: REDIS_PORT
            value: "{{ .Values.redis.master.containerPorts.redis }}"
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: redis-password
                name: "qalita-rediscreds"
                optional: false
        {{- if .Values.backend.mail.enabled }}
          - name: MAIL_USERNAME
            value: "{{ .Values.backend.mail.username }}"
          - name: MAIL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: mail-password
                name: "qalita-mailcreds"
                optional: false
          - name: MAIL_FROM
            value: "{{ .Values.backend.mail.from }}"
          - name: MAIL_FROM_NAME
            value: "{{ .Values.backend.mail.from_name }}"
          - name: MAIL_PORT
            value: "{{ .Values.backend.mail.port }}"
          - name: MAIL_SERVER
            value: "{{ .Values.backend.mail.server }}"
          - name: MAIL_STARTTLS
            value: "{{ .Values.backend.mail.starttls }}"
          - name: MAIL_SSL_TLS
            value: "{{ .Values.backend.mail.ssl_tls }}"
        {{- end }}
          - name: QALITA_ENV
            value: "{{ .Values.backend.mode }}"
          - name: QALITA_ACCESS_TOKEN_EXPIRE_MINUTES
            value: "{{ .Values.backend.AUTHTokenExpireMinutes }}"
          - name: QALITA_RETENTION_LOG_HOURS
            value: "{{ .Values.backend.RetentionLogsHours }}"
          - name: QALITA_API_TOKEN_EXPIRE_MINUTES
            value: "{{ .Values.backend.APItokenExpireMinutes }}"
          - name: QALITA_ORGANIZATION_NAME
            value: "{{ .Values.backend.organization.name }}"
          - name: QALITA_API_PORT
            value: "{{ .Values.backend.api.port }}"
          - name: QALITA_API_HOST
            value: "{{ .Values.backend.api.host }}"
          - name: QALITA_API_WORKER
            value: "{{ .Values.backend.api.worker }}"
          - name: QALITA_ADMIN_USERNAME
            value: "{{ .Values.backend.adminUsername }}"
          - name: QALITA_ALGORITHM
            value: "{{ .Values.backend.secretKeyAlgorithm }}"
          - name: QALITA_INIT_SLEEP
            value: "{{ .Values.backend.iniSleep }}"
          - name: QALITA_PUBLIC_PLATFORM_URL
            value: "https://{{ .Values.cluster.domain }}"
          - name: QALITA_PUBLIC_API_URL
            value: "https://api.{{ .Values.cluster.domain }}"
          - name: QALITA_PUBLIC_DOC_URL
            value: "https://doc.{{ .Values.cluster.domain }}"
          - name: QALITA_S3_URL
            value: "{{ .Values.backend.s3.url }}"
          - name: QALITA_AUTH_MODE
            value: "{{ .Values.backend.authMode }}"
          - name: QALITA_S3_KEY_ID
            valueFrom:
              secretKeyRef:
                key: admin_access_key_id
                name: {{ .Values.backend.s3.secretName }}
                optional: false
          - name: QALITA_S3_KEY_SECRET
            valueFrom:
              secretKeyRef:
                key: admin_secret_access_key
                name: {{ .Values.backend.s3.secretName }}
                optional: false
          - name: QALITA_S3_READER_KEY_ID
            valueFrom:
              secretKeyRef:
                key: read_access_key_id
                name: {{ .Values.backend.s3.secretName }}
                optional: false
          - name: QALITA_S3_READER_KEY_SECRET
            valueFrom:
              secretKeyRef:
                key: read_secret_access_key
                name: {{ .Values.backend.s3.secretName }}
                optional: false
          - name: QALITA_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: adminPassword
                name: "{{ .Release.Name }}-qalita-secret"
                optional: false
          - name: QALITA_SECRET_KEY
            valueFrom:
              secretKeyRef:
                key: secretKey
                name: "{{ .Release.Name }}-qalita-secret"
                optional: false
          - name: QALITA_LICENSE_KEY
            valueFrom:
              secretKeyRef:
                key: licenseKey
                name: "{{ .Release.Name }}-qalita-secret"
                optional: false
          - name: QALITA_LICENSE_USER
            value: "{{ .Values.licenseUser }}"
{{- if .Values.backend.deployment.extraEnv }}
{{ toYaml .Values.backend.deployment.extraEnv | indent 10 }}
{{- end }}
        ports:
          - containerPort: {{ .Values.backend.service.targetPort }}
            name: {{ .Values.backend.service.targetPort }}{{ .Values.backend.service.protocol | lower }}
            protocol: {{ .Values.backend.service.protocol }}
{{- if .Values.backend.deployment.resources }}
        resources:
{{ toYaml .Values.backend.deployment.resources | indent 10 }}
{{- end }}
      {{- if .Values.dockerregistry.enabled }}
      imagePullSecrets:
      - name: qalita-platform-dockerregistry
      {{- end }}
